apply plugin: 'com.android.application'
apply plugin: 'realm-android'
//apply plugin: 'io.fabric'

project.ext {
    def versionPropsFile = file('..\\version.properties')
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        def code = versionProps['VERSION_CODE'].toInteger() + 1
        versionProps['VERSION_CODE']=code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
        versionCode = code
        versionName = "0.0.1"
    } else {
        throw new GradleException("Could not read version.properties!")
    }
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {

    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "fr.justgame.quickcolor"
        minSdkVersion 18
        targetSdkVersion 25
        versionCode project.versionCode
        versionName project.versionName
        multiDexEnabled  true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    android.applicationVariants.all { variant ->
        def apk = variant.outputs[0].outputFile;
        def newName = "QuickColor" + "-v" + android.defaultConfig.versionName + "-Build." + android.defaultConfig.versionCode;
        if (variant.buildType.name.toLowerCase() == "debug") {
            newName += "-debug"
        }
        newName += ".apk"

        variant.outputs[0].outputFile = new File(apk.parentFile, newName);
        if (variant.outputs[0].zipAlign) {
            variant.outputs[0].zipAlign.outputFile = new File(apk.parentFile, newName.replace("-unaligned", ""));
        }
    }


    /*sourceSets {
        main {
            jni.srcDirs = []
            jniLibs.srcDirs = ['src/main/libs']
            res.srcDirs = [
                    'src/main/res/layouts/account',
                    'src/main/res/layouts/history',
                    'src/main/res/layouts/home',
                    'src/main/res/layouts/measurement',
                    'src/main/res/layouts/patient',
                    'src/main/res/layouts/settings',
                    'src/main/res/layouts/goals',
                    'src/main/res/layouts/share',
                    'src/main/res/layouts',
                    'src/main/res'
            ]
        }
    }*/
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':libraries:BaseGameUtils')
    compile 'com.android.support:multidex:1.0.1'
    /*compile('com.github.rey5137:material:1.2.2') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
//        exclude group: 'com.android.support', module: 'cardview-v7'
    }*/
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.google.android.gms:play-services:10.2.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-beta4'
    //compile 'com.github.nitrico.stickyscrollview:stickyscrollview:1.0.1'
    //compile 'com.squareup:otto:1.3.8'
    compile 'com.jakewharton:butterknife:8.7.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.7.0'
    //compile 'com.android.support.test.espresso:espresso-contrib:2.2.2'
    //compile 'ayar.oktay.library:advancedtextview:0.4.5'
    //compile 'com.uncopt:android.justified:1.0'
    //Library for Tap https://github.com/KeepSafe/TapTargetView
    //compile 'uk.co.samuelwall:material-tap-target-prompt:1.11.0'
    //Or this one https://github.com/TakuSemba/Spotlight
    //compile 'com.github.takusemba:spotlight:1.0.1'
    compile 'com.skyfishjy.ripplebackground:library:1.0.1'

    //compile 'com.squareup:otto:1.3.8'
    //compile 'io.realm:android-adapters:1.2.2'
    //I needed to add this compile 'com.facebook.android:facebook-android-sdk:[4,5)'
    compile 'com.facebook.android:facebook-android-sdk:[4,5)'

    //For settings transition
    compile 'andy.ayaseruri.circularrevealactivity:lib:1.0.0'
    compile 'com.github.ozodrukh:CircularReveal:1.1.1'

    //For settings https://github.com/sjwall/MaterialTapTargetPrompt
    //compile 'uk.co.samuelwall:material-tap-target-prompt:1.11.0'
    //compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') { transitive = true; }
    testCompile 'junit:junit:4.12'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}
